/*=========================================================================

Program:   ORFEO Toolbox
Language:  C++
Date:      $Date$
Version:   $Revision$


Copyright (c) Centre National d'Etudes Spatiales. All rights reserved.
See OTBCopyright.txt for details.

Copyright (c) CS Systemes d'information. All rights reserved.
See CSCopyright.txt for details.

This software is distributed WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.  See the above copyright notices for more information.

=========================================================================*/
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <string>
#include <iostream>

/**
 * @brief main application for generating the otb_config.inp file.
 * 
 * @param argv[1] Path to OTB_BINARY_DIR/otb_config.inp
 *
 * @param argv[2] language parameter 
 */
int main(int argc, char* argv[])
{
   if (argc != 3)
   {
      exit(1);
   }

   std::ofstream os(argv[1]);
   if (!os)
   {
      exit(1);
   }
    /*
   // Get the version.  This is now passed in from the make file.
   std::string versionString = "Version ";
   versionString += argv[2];
   std::string versionNumber = argv[2];
   std::string majorVersion;
   std::string minorVersion = "0";
   std::string releaseVersion = "0";
   std::string::size_type pos1 = std::string::npos;
   std::string::size_type pos2 = std::string::npos;
   
   pos1 = versionNumber.find(".", 0);
   if(pos1 != std::string::npos)
   {
      majorVersion = std::string(versionNumber.begin(),
                                 versionNumber.begin()+pos1);
      pos2 = versionNumber.find(".", pos1+1);
      if(pos2 != std::string::npos)
      {
         minorVersion = std::string(versionNumber.begin()+pos1+1,
                                    versionNumber.begin()+pos2);
         releaseVersion = std::string(versionNumber.begin()+pos2+1,
                                      versionNumber.end());
      }
   }
   else
   {
      majorVersion = versionNumber;
   }
   // Get the build date in the format of (yyyymmdd).
   char s[11];
   s[10] = '\0';
   time_t t;
   time(&t);
   tm* lt = localtime(&t);
   strftime(s, 11, "(%Y%m%d)", lt);
   std::string date = s;

   // Write the header file.
   os << "// Auto generated by version-config - DO NOT EDIT\n"
      << "#ifndef ossimVersion_HEADER\n"
      << "#define ossimVersion_HEADER\n"
      << "\n"
      << "#include <ossim/ossimConfig.h>\n"
      << "\n"
      << "#ifndef OSSIM_VERSION\n"
      << "#  define OSSIM_VERSION " << "\"" << versionString << "\"\n"
      << "#  define OSSIM_VERSION_NUMBER " << "\"" << versionNumber << "\"\n"
      << "#  define OSSIM_MAJOR_VERSION_NUMBER " << majorVersion << "\n"
      << "#  define OSSIM_MINOR_VERSION_NUMBER " << minorVersion << "\n"
      << "#  define OSSIM_RELEASE_NUMBER " << releaseVersion << "\n"
      << "#endif\n"
      << "\n"
      << "// date format = (yyyymmdd)\n"
      << "#ifndef OSSIM_BUILD_DATE\n"
      << "#  define OSSIM_BUILD_DATE " << "\"" << date << "\"\n"
      << "#endif\n"
      << "\n"
      << "#endif /* End of #ifndef ossimVersion_HEADER "
      << std::endl;
   */
   std::string language(argv[2]);
      
   
   os << "#Auto generated by config-properties \n"
      << "#Language \n"
      << "OTB_LANG="
      <<  language
      << "\n"
      << "# end of config file properties generation"
      << std::endl;   
   os.close();
   
   std::cout << "wrote file: " << argv[1] << std::endl;

   exit(0);
}
