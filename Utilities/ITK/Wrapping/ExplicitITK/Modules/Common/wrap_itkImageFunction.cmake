WRAP_CLASS("itk::ImageFunction")
WRAP_TEMPLATE("ISC2DD" "Templates::ImageSC2,double,double")
WRAP_TEMPLATE("ISC3DD" "Templates::ImageSC3,double,double")
WRAP_TEMPLATE("ID1DD" "Templates::ImageD1,double,double")
WRAP_TEMPLATE("ID2DD" "Templates::ImageD2,double,double")
WRAP_TEMPLATE("ID2DF" "Templates::ImageD2,double,float")
WRAP_TEMPLATE("ID2VD2D" "Templates::ImageD2,Templates::VectorD2,double")
WRAP_TEMPLATE("ID3DD" "Templates::ImageD3,double,double")
WRAP_TEMPLATE("IF2BD" "Templates::ImageF2,bool,double")
WRAP_TEMPLATE("IF2BF" "Templates::ImageF2,bool,float")
WRAP_TEMPLATE("IF2DD" "Templates::ImageF2,double,double")
WRAP_TEMPLATE("IF2DF" "Templates::ImageF2,double,float")
WRAP_TEMPLATE("IF2FF" "Templates::ImageF2,float,float")
WRAP_TEMPLATE("IF2VD2D" "Templates::ImageF2,Templates::VectorD2,double")
WRAP_TEMPLATE("ID2CVD2F" "Templates::ImageD2,Templates::CovariantVectorD2,float")
WRAP_TEMPLATE("IUI2CVD2F" "Templates::ImageUI2,Templates::CovariantVectorD2,float")
WRAP_TEMPLATE("IUC2CVD2F" "Templates::ImageUC2,Templates::CovariantVectorD2,float")
WRAP_TEMPLATE("IUC2CVD2D" "Templates::ImageUC2,Templates::CovariantVectorD2,double")
WRAP_TEMPLATE("IUC3CVD3D" "Templates::ImageUC3,Templates::CovariantVectorD3,double")
WRAP_TEMPLATE("IUC3CVD3F" "Templates::ImageUC3,Templates::CovariantVectorD3,float")
WRAP_TEMPLATE("IF2CVD2D" "Templates::ImageF2,Templates::CovariantVectorD2,double")
WRAP_TEMPLATE("IF3CVD3D" "Templates::ImageF3,Templates::CovariantVectorD3,double")
WRAP_TEMPLATE("IF2CVD2F" "Templates::ImageF2,Templates::CovariantVectorD2,float")
WRAP_TEMPLATE("IF3BF" "Templates::ImageF3,bool,float")
WRAP_TEMPLATE("IF3DD" "Templates::ImageF3,double,double")
WRAP_TEMPLATE("IF3DF" "Templates::ImageF3,double,float")
WRAP_TEMPLATE("IF3FF" "Templates::ImageF3,float,float")
WRAP_TEMPLATE("ISI2DD" "Templates::ImageSI2,double,double")
WRAP_TEMPLATE("IFAF22FAD2F" "Templates::ImageFAF22,Templates::FixedArrayD2,float")
WRAP_TEMPLATE("IFAF22FAD2D" "Templates::ImageFAF22,Templates::FixedArrayD2,double")
WRAP_TEMPLATE("IFAF33FAD3F" "Templates::ImageFAF33,Templates::FixedArrayD3,float")
WRAP_TEMPLATE("IFAF33FAD3D" "Templates::ImageFAF33,Templates::FixedArrayD3,double")
WRAP_TEMPLATE("IFAUC43FAD4F" "Templates::ImageFAUC43,Templates::FixedArrayD4,float")
WRAP_TEMPLATE("IFAUC43FAD4D" "Templates::ImageFAUC43,Templates::FixedArrayD4,double")
WRAP_TEMPLATE("IFAUC43MDF" "Templates::ImageFAUC43,vnl_matrix<double>,float")
WRAP_TEMPLATE("IVF22FAD2D" "Templates::ImageVF22,Templates::FixedArrayD2,double")
WRAP_TEMPLATE("IVF22FAD2F" "Templates::ImageVF22,Templates::FixedArrayD2,float")
WRAP_TEMPLATE("IVF32FAD3D" "Templates::ImageVF32,Templates::FixedArrayD3,double")
WRAP_TEMPLATE("IVF33FAD3D" "Templates::ImageVF33,Templates::FixedArrayD3,double")
WRAP_TEMPLATE("IVUS33FAD3D" "Templates::ImageVUS33,Templates::FixedArrayD3,double")
WRAP_TEMPLATE("IVF22VD2D" "Templates::ImageVF22,Templates::VectorD2,double")
WRAP_TEMPLATE("IVF22VD2F" "Templates::ImageVF22,Templates::VectorD2,float")
WRAP_TEMPLATE("IVF32VD3D" "Templates::ImageVF32,Templates::VectorD3,double")
WRAP_TEMPLATE("IVF33VD3D" "Templates::ImageVF33,Templates::VectorD3,double")
WRAP_TEMPLATE("IVUS33VD3D" "Templates::ImageVUS33,Templates::VectorD3,double")
WRAP_TEMPLATE("ISL2DD" "Templates::ImageSL2,double,double")
WRAP_TEMPLATE("ISS2DD" "Templates::ImageSS2,double,double")
WRAP_TEMPLATE("IUC2BD" "Templates::ImageUC2,bool,double")
WRAP_TEMPLATE("IUC2BF" "Templates::ImageUC2,bool,float")
WRAP_TEMPLATE("IUC2DD" "Templates::ImageUC2,double,double")
WRAP_TEMPLATE("IUC2DF" "Templates::ImageUC2,double,float")
WRAP_TEMPLATE("IUC3DD" "Templates::ImageUC3,double,double")
WRAP_TEMPLATE("IUC3DF" "Templates::ImageUC3,double,float")
WRAP_TEMPLATE("IUC3UCF" "Templates::ImageUC3,unsigned char,float")
WRAP_TEMPLATE("IUI2DD" "Templates::ImageUI2,double,double")
WRAP_TEMPLATE("IUI3DD" "Templates::ImageUI3,double,double")
WRAP_TEMPLATE("IUL2DD" "Templates::ImageUL2,double,double")
WRAP_TEMPLATE("IUL3DF" "Templates::ImageUL3,double,float")
WRAP_TEMPLATE("IUL3DD" "Templates::ImageUL3,double,double")
WRAP_TEMPLATE("IUS2DD" "Templates::ImageUS2,double,double")
WRAP_TEMPLATE("IUS3DD" "Templates::ImageUS3,double,double")
WRAP_TEMPLATE("IUS3DF" "Templates::ImageUS3,double,float")
END_WRAP_CLASS()
