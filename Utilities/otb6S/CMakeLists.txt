#
# Current informations:
# Version 1.0B released on May, 2005.
# Download site : http://6s.ltdri.org/
#

PROJECT(OTB6S C)

# Allow sources in subdirectories to see the include files.
INCLUDE_DIRECTORIES(${OTB6S_SOURCE_DIR})

# Inform header files they are being included from a source inside the
# otb_6S library.
ADD_DEFINITIONS(-DOTB_6S_SRC)
ADD_DEFINITIONS(-DNON_POSIX_STDIO)

# On Microsoft Visual
IF(WIN32)
  IF(NOT BORLAND)
    IF(NOT CYGWIN)
      IF(NOT MINGW)
#        IF(NOT ITK_ENABLE_VISUAL_STUDIO_DEPRECATED_C_WARNINGS)
          ADD_DEFINITIONS(
            -DUSE_CLOCK
            -DMSDOS
            -DNO_ONEXIT
            )
#        ENDIF(NOT ITK_ENABLE_VISUAL_STUDIO_DEPRECATED_C_WARNINGS)
      ELSE(NOT MINGW)
          ADD_DEFINITIONS(
            -DUSE_CLOCK
            -DMSDOS
            -DNO_TRUNCATE  #For generate endfile.c
            )
      ENDIF(NOT MINGW)
    ENDIF(NOT CYGWIN)
  ENDIF(NOT BORLAND)
ENDIF(WIN32)


# source files for otb6S
FILE(GLOB OTB6S_SRCS "6SV1.0B/*.c" )

# source files for libf2c
# Not use itkf2c because uncomplete for link 6S main exectuable
FILE(GLOB LIBF2C_SRCS "libf2c/*.c" )

LIST(REMOVE_ITEM LIBF2C_SRCS "${OTB6S_SOURCE_DIR}/libf2c/arithchk.c" )
LIST(REMOVE_ITEM LIBF2C_SRCS "${OTB6S_SOURCE_DIR}/libf2c/main.c" )
LIST(REMOVE_ITEM LIBF2C_SRCS "${OTB6S_SOURCE_DIR}/libf2c/getarg_.c" )
LIST(REMOVE_ITEM LIBF2C_SRCS "${OTB6S_SOURCE_DIR}/libf2c/iargc_.c" )

IF(CMAKE_COMPILER_IS_GNUCXX)
  FOREACH(f ${LIBF2C_SRCS} )
        SET_SOURCE_FILES_PROPERTIES( ${f} PROPERTIES COMPILE_FLAGS -w )
  ENDFOREACH(f)
ELSE(CMAKE_COMPILER_IS_GNUCXX)
  IF(WIN32)
    IF (CMAKE_CXX_COMPILER MATCHES "^cl$")
        FOREACH(f ${LIBF2C_SRCS} )
                SET_SOURCE_FILES_PROPERTIES( ${f} PROPERTIES COMPILE_FLAGS "/W0" )
        ENDFOREACH(f)
    ENDIF (CMAKE_CXX_COMPILER MATCHES "^cl$")
  ENDIF(WIN32)
ENDIF(CMAKE_COMPILER_IS_GNUCXX)


# Main code source
SET(OTB6S_MAIN_SRCS
otb_main6S_function.c                # otb 6S main function
main.c                               # ORIGINAL 6S main 
otb_main6S_program_call_function.c   # OTB 6S main (which call otb_main6S_function function)
aeroprof_com.c                       # others *.c fils generated by f2c
multorder_com.c
sixs_del__com.c   
sixs_ier__com.c
num_quad__com.c        
sixs_aer__com.c                     
sixs_disc__com.c  
sixs_planesim__com.c
mie_in__com.c   
sixs_atm__com.c                     
sixs_ffu__com.c   
sixs_test__com.c
)

INCLUDE_DIRECTORIES(${OTB6S_SOURCE_DIR}/libf2c)

# Adjust the compiler flags to avoid problems with f2c-generated code.
IF(CMAKE_COMPILER_IS_GNUCC)
  # Hide warnings in f2c-generated code.
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -w")

  # CMake versions before 2.4 did not put the source-file-specific flags
  # after the directory-level flags.  Remove optimization flags from the
  # CMAKE_C_FLAGS* variables so they can be overridden.
  IF("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.4)
    FOREACH(c "" "_DEBUG" "_RELEASE" "_MINSIZEREL" "_RELWITHDEBINFO")
      STRING(REGEX REPLACE
        "-O[^ ]*( |$)" "" CMAKE_C_FLAGS${c} "${CMAKE_C_FLAGS${c}}")
    ENDFOREACH(c)
  ENDIF("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.4)
#ELSE(CMAKE_COMPILER_IS_GNUCC)
#  IF(WIN32)
#    IF(NOT BORLAND)
#      IF(NOT CYGWIN)
#        IF(NOT MINGW)
#                SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /w")
#                # CMake versions before 2.4 did not put the source-file-specific flags
#                # after the directory-level flags.  Remove optimization flags from the
#                # CMAKE_C_FLAGS* variables so they can be overridden.
#                IF("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.4)
#                        FOREACH(c "" "_DEBUG" "_RELEASE" "_MINSIZEREL" "_RELWITHDEBINFO")
#                                STRING(REGEX REPLACE
#                                  "-O[^ ]*( |$)" "" CMAKE_C_FLAGS${c} "${CMAKE_C_FLAGS${c}}")
#                        ENDFOREACH(c)
#                ENDIF("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.4)
#        ENDIF(NOT MINGW)
#      ENDIF(NOT CYGWIN)
#    ENDIF(NOT BORLAND)
#  ENDIF(WIN32)
ENDIF(CMAKE_COMPILER_IS_GNUCC)

IF(NOT OTB_DISABLE_UTILITIES_COMPILATION)
ADD_LIBRARY(otb6S ${LIBF2C_SRCS} ${OTB6S_SRCS} ${OTB6S_MAIN_SRCS})
IF(UNIX)
    TARGET_LINK_LIBRARIES (otb6S m)
ENDIF(UNIX)
IF(OTB_LIBRARY_PROPERTIES)
  SET_TARGET_PROPERTIES(otb6S PROPERTIES ${OTB_LIBRARY_PROPERTIES})
ENDIF(OTB_LIBRARY_PROPERTIES)

IF(NOT OTB_INSTALL_NO_LIBRARIES)
  INSTALL(TARGETS otb6S
    RUNTIME DESTINATION ${OTB_INSTALL_BIN_DIR_CM24} COMPONENT RuntimeLibraries
    LIBRARY DESTINATION ${OTB_INSTALL_LIB_DIR_CM24} COMPONENT RuntimeLibraries
    ARCHIVE DESTINATION ${OTB_INSTALL_LIB_DIR_CM24} COMPONENT Development)
ENDIF(NOT OTB_INSTALL_NO_LIBRARIES)

IF(NOT OTB_INSTALL_NO_DEVELOPMENT)
  FILE(GLOB __files1 "${CMAKE_CURRENT_SOURCE_DIR}/*.h")
  INSTALL(FILES ${__files1}
    DESTINATION ${OTB_INSTALL_INCLUDE_DIR_CM24}/Utilities/otb6S
    COMPONENT Development)
  FILE(GLOB __files2 "${CMAKE_CURRENT_SOURCE_DIR}//6SV1.0B/*.h")
  INSTALL(FILES ${__files2}
    DESTINATION ${OTB_INSTALL_INCLUDE_DIR_CM24}/Utilities/otb6S/6SV1.0B
    COMPONENT Development)
ENDIF(NOT OTB_INSTALL_NO_DEVELOPMENT)


ENDIF(NOT OTB_DISABLE_UTILITIES_COMPILATION)


