# Sources of non-templated classes.

PROJECT(libexpat)

SET(libexpat_VERSION_MAJOR "2")
SET(libexpat_VERSION_MINOR "0")
SET(libexpat_VERSION_PATCH "1")

# Version string should not include patch level.  The major.minor is
# enough to distinguish available features of the library.
SET(libexpat_VERSION_STRING "${libexpat_VERSION_MAJOR}.${libexpat_VERSION_MINOR}.${libexpat_VERSION_PATCH}")


# Allow sources in subdirectories to see the include files.
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/lib)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

# Build libexpat library
ADD_DEFINITIONS(-DHAVE_EXPAT_CONFIG_H)
FILE(GLOB EXPAT_SRCS "lib/*.c" )

# Adjust the compiler flags to avoid problems with ossim code.
#IF(CMAKE_COMPILER_IS_GNUCC)
#  FOREACH(f ${EXPAT_SRCS} )
#        SET_SOURCE_FILES_PROPERTIES( ${f} PROPERTIES COMPILE_FLAGS -w )
#  ENDFOREACH(f)
#ENDIF(CMAKE_COMPILER_IS_GNUCC)


INCLUDE(CheckIncludeFiles)
CHECK_INCLUDE_FILES( "dlfcn.h" OTB_EXPAT_HAVE_DLFCN_H )
CHECK_INCLUDE_FILES( "fcntl.h" OTB_EXPAT_HAVE_FCNTL_H )
CHECK_INCLUDE_FILES( "inttypes.h" OTB_EXPAT_HAVE_INTTYPES_H )
CHECK_INCLUDE_FILES( "memory.h" OTB_EXPAT_HAVE_MEMORY_H )
CHECK_INCLUDE_FILES( "stdint.h" OTB_EXPAT_HAVE_STDINT_H )
CHECK_INCLUDE_FILES( "stdlib.h" OTB_EXPAT_HAVE_STDLIB_H )
CHECK_INCLUDE_FILES( "strings.h" OTB_EXPAT_HAVE_STRINGS_H )
CHECK_INCLUDE_FILES( "string.h" OTB_EXPAT_HAVE_STRING_H )
CHECK_INCLUDE_FILES( "sys/stat.h" OTB_EXPAT_HAVE_SYS_STAT_H )
CHECK_INCLUDE_FILES( "sys/types.h" OTB_EXPAT_HAVE_SYS_TYPES_H )
CHECK_INCLUDE_FILES( "unistd.h" OTB_EXPAT_HAVE_UNISTD_H )


INCLUDE(CheckFunctionExists)
CHECK_FUNCTION_EXISTS( "bcopy" OTB_EXPAT_HAVE_MEMMOVE )
CHECK_FUNCTION_EXISTS( "getpagesize" OTB_EXPAT_HAVE_GETPAGESIZE )
CHECK_FUNCTION_EXISTS( "memmove" OTB_EXPAT_HAVE_MEMMOVE )

CHECK_FUNCTION_EXISTS( "mmap" OTB_EXPAT_HAVE_MMAP )





CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/cmake_expat_config.h.in 
               ${CMAKE_CURRENT_BINARY_DIR}/expat_config.h)


ADD_LIBRARY(otbexpat ${EXPAT_SRCS} )
#TARGET_LINK_LIBRARIES (otbkml)


INSTALL(TARGETS otbexpat
RUNTIME DESTINATION ${OTB_INSTALL_BIN_DIR} COMPONENT RuntimeLibraries
LIBRARY DESTINATION ${OTB_INSTALL_LIB_DIR} COMPONENT RuntimeLibraries
ARCHIVE DESTINATION ${OTB_INSTALL_LIB_DIR} COMPONENT Development)

SET(__files     ${CMAKE_CURRENT_SOURCE_DIR}/otb_expat.h
                ${CMAKE_CURRENT_SOURCE_DIR}/otb_expat_mangle.h)

INSTALL(FILES ${__files}
    DESTINATION ${OTB_INSTALL_INCLUDE_DIR}/Utilities/otbexpat
    COMPONENT Development)

SET(__files2    ${CMAKE_CURRENT_SOURCE_DIR}/lib/expat_external.h 
                ${CMAKE_CURRENT_SOURCE_DIR}/lib/expat.h)

INSTALL(FILES ${__files2}
    DESTINATION ${OTB_INSTALL_INCLUDE_DIR}/Utilities/otbexpat/lib
    COMPONENT Development)

