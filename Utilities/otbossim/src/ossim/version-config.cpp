//----------------------------------------------------------------------------
//
// License:  See top level LICENSE.txt file.
//
// Author:  David Burken
//
// Description:
// Application to generate ossim/include/ossim/ossimVersion.h file.
// This should be ran after generation of ossim/include/ossim/ossimConfig.h
// file but before anything else.
//
// Returns 0 on success, 1 on error.  Currently does not set error msg.
//
// $Id$
//----------------------------------------------------------------------------
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <string>
#include <iostream>

#include <ossim/ossimConfig.h>

// Caller should pass in path to ossim/include/ossim/ossimVersion.h
int main(int argc, char* argv[])
{
   if (argc != 2)
   {
      return(1);
   }

   std::ofstream os(argv[1]);
   if (!os)
   {
      return(12);
   }

   // Get the version from the ossimConfig.h
   std::string versionString = "Version ";
   std::string versionNumber = "";

#ifdef OSSIM_VERSION
   versionString += OSSIM_VERSION;
   versionNumber =  OSSIM_VERSION;
#else
   versionString += "?.?.?";
   versionNumber += "?.?.?";
#endif
   
   // Get the build date in the format of (yyyymmdd).
   char s[11];
   s[10] = '\0';
   time_t t;
   time(&t);
   tm* lt = localtime(&t);
   strftime(s, 11, "(%Y%m%d)", lt);
   std::string date = s;

   // Write the header file.
   os << "// Auto generated by version-config - DO NOT EDIT\n"
      << "#ifndef ossimVersion_HEADER\n"
      << "#define ossimVersion_HEADER\n"
      << "\n"
      << "#include <ossim/ossimConfig.h>\n"
      << "\n"
      << "#ifndef OSSIM_VERSION\n"
      << "#  define OSSIM_VERSION " << "\"" << versionString << "\"\n"
      << "#  define OSSIM_VERSION_NUMBER " << "\"" << versionNumber << "\"\n"
      << "#endif\n"
      << "\n"
      << "// date format = (yyyymmdd)\n"
      << "#ifndef OSSIM_BUILD_DATE\n"
      << "#  define OSSIM_BUILD_DATE " << "\"" << date << "\"\n"
      << "#endif\n"
      << "\n"
      << "#endif /* End of #ifndef ossimVersion_HEADER */"
      << std::endl;
   
   os.close();
   
   std::cout << "wrote file: " << argv[1] << std::endl;
//OTB Modifications
//   exit(0);
   return(0);
}
