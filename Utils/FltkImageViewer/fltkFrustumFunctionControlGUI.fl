# data file for the Fltk User Interface Designer (fluid)
version 1.0011 
header_name {.h} 
code_name {.cxx} 
gridx 5 
gridy 5 
snap 3
class fltkFrustumFunctionControlGUI {open
} {
  Function {fltkFrustumFunctionControlGUI()} {} {
    Fl_Window controlWindow {
      label {Frustum Function Controls} open
      xywh {576 197 313 252} visible
    } {
      Fl_Value_Output angleZValueOutput {
        xywh {233 18 55 20} value 10
      }
      Fl_Adjuster xAdjuster {
        label {X  }
        callback {SetApexX( o->value() );}
        xywh {105 114 130 20} labelsize 12 align 4 minimum -500 maximum 500 step 0.001
      }
      Fl_Value_Output xValueOutput {
        xywh {235 114 55 20}
      }
      Fl_Adjuster yAdjuster {
        label {Y  }
        callback {SetApexY( o->value() );}
        xywh {105 134 130 20} labelsize 12 align 4 minimum -500 maximum 500 step 0.001
      }
      Fl_Value_Output yValueOutput {
        xywh {235 134 55 20}
      }
      Fl_Adjuster zAdjuster {
        label {Z  }
        callback {SetApexZ( o->value() );}
        xywh {105 154 130 20} labelsize 12 align 4 minimum -500 maximum 500 step 0.001
      }
      Fl_Value_Output zValueOutput {
        xywh {235 154 55 20}
      }
      Fl_Box {} {
        label {Apex Coordinates}
        xywh {93 89 150 25}
      }
      Fl_Roller angleZRoller {
        label {Angle     Z  }
        callback {SetAngleZ( o->value() );}
        xywh {98 18 135 20} type Horizontal align 4 minimum -180 maximum 180 step 0.1 value 10
      }
      Fl_Roller apertureAngleXRoller {
        label {Aperture X  }
        callback {SetApertureAngleX( o->value() );}
        xywh {98 40 135 20} type Horizontal align 4 maximum 90 step 0.1 value 10
      }
      Fl_Value_Output apertureAngleXValueOutput {
        xywh {233 40 55 20} value 10
      }
      Fl_Roller apertureAngleYRoller {
        label {Aperture Y  }
        callback {SetApertureAngleY( o->value() );}
        xywh {98 62 135 20} type Horizontal align 4 maximum 90 step 0.1 value 10
      }
      Fl_Value_Output apertureAngleYValueOutput {
        xywh {233 62 55 20} value 10
      }
      Fl_Adjuster topPlaneAdjuster {
        label {Top Plane }
        callback {SetTopPlane( o->value() );}
        xywh {105 195 130 20} labelsize 12 align 4 minimum -500 maximum 500 step 0.001
      }
      Fl_Value_Output topPlaneValueOutput {
        xywh {235 195 55 20}
      }
      Fl_Value_Output bottomPlaneValueOutput {
        xywh {235 215 55 20}
      }
      Fl_Adjuster bottomPlaneAdjuster {
        label {Bottom Plane }
        callback {SetBottomPlane( o->value() );}
        xywh {105 215 130 20} labelsize 12 align 4 minimum -500 maximum 500 step 0.001
      }
    }
  }
  Function {~fltkFrustumFunctionControlGUI()} {return_type virtual
  } {}
  Function {SetAngleZ( double radius )} {return_type {virtual void}
  } {
    code {angleZRoller->value( radius );
angleZValueOutput->value( radius );} {}
  }
  Function {SetApexX( double x )} {return_type {virtual void}
  } {
    code {xAdjuster->value( x );
xValueOutput->value( x );} {}
  }
  Function {SetApexY( double y )} {return_type {virtual void}
  } {
    code {yAdjuster->value( y );
yValueOutput->value( y );} {}
  }
  Function {SetApexZ( double z )} {return_type {virtual void}
  } {
    code {zAdjuster->value( z );
zValueOutput->value( z );} {}
  }
  Function {Show(void)} {return_type {virtual void}
  } {
    code {controlWindow->show();} {}
  }
  Function {Hide(void)} {return_type {virtual void}
  } {
    code {controlWindow->hide();} {}
  }
  Function {SetApertureAngleX( double radius )} {return_type {virtual void}
  } {
    code {apertureAngleXRoller->value( radius );
apertureAngleXValueOutput->value( radius );} {}
  }
  Function {SetApertureAngleY( double radius )} {return_type {virtual void}
  } {
    code {apertureAngleYRoller->value( radius );
apertureAngleYValueOutput->value( radius );} {}
  }
  Function {SetBottomPlane( double radius )} {return_type {virtual void}
  } {
    code {bottomPlaneAdjuster->value( radius );
bottomPlaneValueOutput->value( radius );} {selected
    }
  }
  Function {SetTopPlane( double radius )} {return_type {virtual void}
  } {
    code {topPlaneAdjuster->value( radius );
topPlaneValueOutput->value( radius );} {}
  }
} 
