# data file for the Fltk User Interface Designer (fluid)
version 1.0100 
header_name {.h} 
code_name {.cxx}
class fltkImage2DViewerGUI {open
} {
  Function {fltkImage2DViewerGUI()} {open
  } {
    Fl_Window externalWindow {open
      xywh {512 175 450 365} resizable visible
    } {
      Fl_Box imageViewer {
        xywh {0 0 450 365}
        code0 {\#include <fltkImage2DViewerWindow.h>}
        class {fltk::Image2DViewerWindow}
      }
    }
    Fl_Window intensityWindow {
      label {Intensity Windowing} open
      xywh {304 616 501 52} hide
    } {
      Fl_Value_Slider minimumSlider {
        label {Min }
        callback {this->RenderImage( minimumSlider->value(), maximumSlider->value() );}
        xywh {33 7 460 16} type Horizontal labelsize 12 align 4
      }
      Fl_Value_Slider maximumSlider {
        label {Max }
        callback {this->RenderImage( minimumSlider->value(), maximumSlider->value() );}
        xywh {33 24 460 17} type Horizontal labelsize 12 align 4
      }
    }
  }
  Function {~fltkImage2DViewerGUI()} {return_type virtual
  } {}
  Function {SetLabel(const char *label)} {return_type void
  } {
    code {externalWindow->label( label );} {}
  }
  Function {Show(void)} {open return_type void
  } {
    code {externalWindow->show();
imageViewer->show();} {}
  }
  Function {Hide(void)} {open return_type void
  } {
    code {externalWindow->hide();
intensityWindow->hide();} {selected
    }
  }
  Function {Redraw(void)} {return_type void
  } {
    code {imageViewer->redraw();
Fl::check();} {}
  }
  Function {Update(void)} {return_type {virtual void}
  } {}
  Function {RenderImage( double min, double max )} {open return_type {virtual void}
  } {}
} 
