OTB-v.1.2.1 - Changes since version 1.2.0
-----------------------------------------

*IO:
	- Improved support of geographic meta data handling in pipeline execution.

*BasicFilters:
    - Added a cast filter otb::ImageToVectorImageCastFilter to convert 
          otb::Image (templated with scalar pixel types) to mono-channel otb::VectorImage.

*FeatureExtraction:
    - Added a contour extraction filter otb::ImageToEdgePathFilter.

*Visualization:
    - Viewer accepts now otb::Image (templated with scalar pixel types) 
          as well as otb::VectorImage.
    - Added FlRun() method to the Viewer, which execute Show() method from 
          the Viewer followed by the Fl::run() method from FLTK.

*Platforms:
	- Minor correction of otb::ObjectList and otb::List in order to support 
	      visual 7.0 compiler.

*Experimental:
    - Support for python binding compilation including itk binding 
          templated with OTB images, OTB IO and OTB Image viewer.
    - OSSIM has been integrated in the OTB Utilities directory to 
          prepare its future use in new geometric features. 


OTB-v.1.2.0 - Changes since version 1.0.2
-----------------------------------------

*Platforms:
	- OTB can now been compiled on several new platforms :
	  - SunOS 5.8 (32bits and 64bits).

	- Improved robustness of 
	  - the Microsoft Visual Studio .NET 2003 (7.1), .NET 2005 (8.0) 
	  - the Cygwin and MinGW installation.

*Common:

	- Various bug fixes and warning corrections.

	- Added support for ObjectList (ie SmartPointers) and thus
          support for ImageList.

	- Added base classes for image to image list filters, image
          list to image filters, image list to image list filters.

	- Precision for internal calculus has been tuned to double in
          every filter. 

*Multiscale:

	- Added filters for multiscale analysis and synthesis based on
          the morphological pyramid algorithm.

	- Added automated region-growing multiscale segmentation
          algorithm based on the morphological pyramid analysis.

*Spatial Reasoning:

	- Added support for graph representation of RCC8 spatial
           reasoning relationships.

	- Added filters for atomic RCC8 computation based on two
          segmented regions.

	- Added filter for multiscale segmentation to RCC8 graph
          calculation with optimisations.

*IO:

	- Added full support (reading and writing) of the HFA image
          format (ERDAS img files).

	 - Bug fixes on metada writing (now works for tif and HFA
           formats, limited support envi header file formats due to
           Gdal limitations).

	- Bug fixes on memory management in the Reader.
	
	- Bug fixes related to the IO framework on MS Windows platforms.
  
*Learning:

	- Added filters for learning, classification and activation
          map of data sets using Kohonen's self organizing maps.

*Visualization:

	- Re-factoring of the base classes for visualization.

	- Re-factoring of the viewer object (and viewer apps). The
          viewer can now be used to visualised large remote-sensing
          images (Quickbird, Spot5) with limited memory footprint.


*Applications:

	- Minor changes needed for the portability of OTB-Applications.

	- Added a viewer application in OTB-Applications.

	- Added a interactive change detection application in OTB-Applications.


OTB-v.1.0.2 - Changes since version 1.0.1
-----------------------------------------

- OTB can now been compiled on several new platforms :
       - Microsoft Visual Studio .NET 2005 (8.0).
       - Cygwin.
       - MinGW on Windows platform. 

- LUM and BSQ formats have been added.


Note : On MS Windows platforms, if you have any problem related 
       to using the OTB's internal version of ITK, you could try to use 
       an external version of ITK (use ITK 2.6 or later) by setting 
       OTB_USE_EXTERNAL_ITK to ON and ITK_DIR to the directory where 
       your ITK built resides.

       
OTB-v.1.0.1 - Changes since version 1.0.0
-----------------------------------------

- Building the visualization functionnalities is now an option
  (OTB_USE_VISU variable within CMake). This allows you to build OTB
  without Fltk and Open GL.

- Improved robustness of the Microsoft Visual Studio .NET 2003 (7.1) installation.

- Minor changes needed for the portability of OTB-Applications.

- Bugfixes related to the IO framework on MS Windows platforms.
